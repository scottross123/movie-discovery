{"ast":null,"code":"var _jsxFileName = \"/Users/scottross/Development/Python/movie discovery/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [ratings, setRatings] = useState([]);\n\n  function handleDelete(i) {\n    setRatings([...ratings.slice(0, i), ...ratings.slice(i + 1)]);\n  }\n\n  function handleRatingChange(i, e) {\n    const newRatings = ratings.slice();\n    newRatings[i].rating = e.target.value;\n    setRatings(newRatings);\n  }\n\n  function handleCommentChange(i, e) {\n    const newRatings = ratings.slice();\n    newRatings[i].content = e.target.value;\n    setRatings(newRatings);\n  }\n\n  const reviews = val.map((review, i) => /*#__PURE__*/_jsxDEV(Review, {\n    username: review.username,\n    rating: review.rating,\n    content: review.content,\n    onDelete: () => handleDelete(i),\n    onEdit: e => handleCommentChange(i, e),\n    onRate: e => handleRatingChange(i, e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 20\n  }, this));\n  useEffect(() => {\n    fetch('/get_reviews', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      setRatings(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), reviews]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"kKLI/5xQF2AhV2ay7Qz41Vi+ulg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/scottross/Development/Python/movie discovery/src/App.js"],"names":["logo","React","useState","App","ratings","setRatings","handleDelete","i","slice","handleRatingChange","e","newRatings","rating","target","value","handleCommentChange","content","reviews","val","map","review","username","useEffect","fetch","method","headers","then","response","json","data"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBH,QAAQ,CAAC,EAAD,CAAtC;;AAEA,WAASI,YAAT,CAAsBC,CAAtB,EAAyB;AACvBF,IAAAA,UAAU,CAAC,CAAC,GAAGD,OAAO,CAACI,KAAR,CAAc,CAAd,EAAiBD,CAAjB,CAAJ,EAAyB,GAAGH,OAAO,CAACI,KAAR,CAAcD,CAAC,GAAC,CAAhB,CAA5B,CAAD,CAAV;AACD;;AAED,WAASE,kBAAT,CAA4BF,CAA5B,EAA+BG,CAA/B,EAAkC;AAChC,UAAMC,UAAU,GAAGP,OAAO,CAACI,KAAR,EAAnB;AACAG,IAAAA,UAAU,CAACJ,CAAD,CAAV,CAAcK,MAAd,GAAuBF,CAAC,CAACG,MAAF,CAASC,KAAhC;AACAT,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD;;AAED,WAASI,mBAAT,CAA6BR,CAA7B,EAAgCG,CAAhC,EAAmC;AACjC,UAAMC,UAAU,GAAGP,OAAO,CAACI,KAAR,EAAnB;AACAG,IAAAA,UAAU,CAACJ,CAAD,CAAV,CAAcS,OAAd,GAAwBN,CAAC,CAACG,MAAF,CAASC,KAAjC;AACAT,IAAAA,UAAU,CAACM,UAAD,CAAV;AACD;;AAED,QAAMM,OAAO,GAAGC,GAAG,CAACC,GAAJ,CACd,CAACC,MAAD,EAASb,CAAT,kBAAe,QAAC,MAAD;AACb,IAAA,QAAQ,EAAEa,MAAM,CAACC,QADJ;AAEb,IAAA,MAAM,EAAED,MAAM,CAACR,MAFF;AAGb,IAAA,OAAO,EAAEQ,MAAM,CAACJ,OAHH;AAIb,IAAA,QAAQ,EAAE,MAAMV,YAAY,CAACC,CAAD,CAJf;AAKb,IAAA,MAAM,EAAGG,CAAD,IAAOK,mBAAmB,CAACR,CAAD,EAAIG,CAAJ,CALrB;AAMb,IAAA,MAAM,EAAGA,CAAD,IAAOD,kBAAkB,CAACF,CAAD,EAAIG,CAAJ;AANpB;AAAA;AAAA;AAAA;AAAA,UADD,CAAhB;AAUEY,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAAC,cAAD,EAAiB;AACpBC,MAAAA,MAAM,EAAE,KADY;AAEpBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAFW,KAAjB,CAAL,CAMGC,IANH,CAMSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EANtB,EAOGF,IAPH,CAOSG,IAAD,IAAU;AACdxB,MAAAA,UAAU,CAACwB,IAAD,CAAV;AACD,KATH;AAUD,GAXQ,EAWN,EAXM,CAAT;AAaF,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGZ,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAlDQd,G;;KAAAA,G;AAoDT,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport React, { useState } from 'react';\n\nfunction App() {\n\n  const [ratings, setRatings] = useState([]);\n\n  function handleDelete(i) {\n    setRatings([...ratings.slice(0, i), ...ratings.slice(i+1)]);\n  }\n\n  function handleRatingChange(i, e) {\n    const newRatings = ratings.slice();\n    newRatings[i].rating = e.target.value;\n    setRatings(newRatings);\n  }\n\n  function handleCommentChange(i, e) {\n    const newRatings = ratings.slice();\n    newRatings[i].content = e.target.value;\n    setRatings(newRatings);\n  }\n\n  const reviews = val.map(\n    (review, i) => <Review \n      username={review.username}\n      rating={review.rating}\n      content={review.content}\n      onDelete={() => handleDelete(i)}\n      onEdit={(e) => handleCommentChange(i, e)}\n      onRate={(e) => handleRatingChange(i, e)}\n    />);\n\n    useEffect(() => {\n      fetch('/get_reviews', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        }\n      })\n        .then((response) => response.json())\n        .then((data) => {\n          setRatings(data);\n        });\n    }, []);\n  \n  return (\n    <div className=\"App\">\n      <h1>Your reviews:</h1>\n      {reviews}\n      \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}